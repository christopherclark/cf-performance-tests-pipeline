#!/bin/bash

set -eu
# TODO run shellcheck when done
# TODO GOPATH setup can be removed as we use Go modules

mkdir -p "$GOPATH/src/github.com/cloudfoundry-incubator"
cp -r ./cf-performance-tests "$GOPATH/src/github.com/cloudfoundry-incubator"

echo -e "\nGetting test landscape configuration from bbl state..."
pushd "bbl-state/state" > /dev/null
  eval "$(bbl print-env)"
  BOSH_DIRECTOR_NAME="$(cat bbl-state.json | jq -r .bosh.directorName)"
  CF_ADMIN_PASSWORD="$(credhub get -n "/$BOSH_DIRECTOR_NAME/cf/cf_admin_password" -j | jq -r .value)"
  CF_DOMAIN="$(cat bbl-state.json | jq -r .lb.domain)"
  JUMPBOX_URL="$(cat ./vars/jumpbox-vars-file.yml | yq -r .external_ip)"
  JUMPBOX_PRIVATE_KEY="$(cat ./vars/jumpbox-vars-store.yml | yq -r .jumpbox_ssh.private_key)"
  DATABASE_IP="$(bosh -d cf vms --json | jq -r '.Tables[0].Rows[] | select(.instance | startswith("database/")) | .ips')"
  CCDB_PASSWORD="$(credhub get -n "/$BOSH_DIRECTOR_NAME/cf/cc_database_password" -j | jq -r .value)"
  UAADB_PASSWORD="$(credhub get -n "/$BOSH_DIRECTOR_NAME/cf/uaa_database_password" -j | jq -r .value)"
popd > /dev/null

echo -e "\nGetting cf-deployment version..."
# TODO if possible we could also get the cloud_controller_ng commit
CF_DEPLOYMENT_VERSION="$(cat ./cf-deployment/cf-deployment.yml | yq '.manifest_version' -r)"
CAPI_VERSION="$(cat ./cf-deployment/cf-deployment.yml| grep -A 1 capi | grep version | cut -d ':' -f2 | sed 's/ //g')"

echo -e "\nLogging in to CF and creating a test user..."
cf api --skip-ssl-validation "api.$CF_DOMAIN"
cf auth admin "$CF_ADMIN_PASSWORD"
cf create-user perf-test-user perf-test-password

echo -e "\nOpening SSH tunnel to CF database..."
echo "$JUMPBOX_PRIVATE_KEY" > ./jumpbox_private.key
chmod 0600 ./jumpbox_private.key
ssh -4 -N -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" -o "ServerAliveInterval=30" -o "ServerAliveCountMax=10" -o "IPQoS=throughput" -i ./jumpbox_private.key -L 5524:"$DATABASE_IP":5524 jumpbox@"$JUMPBOX_URL" &
SSH_PID=$!

echo -e "\nRunning cf-performance tests..."
TEST_RESULTS="$GOPATH/src/github.com/cloudfoundry-incubator/cf-performance-tests/$TEST_RESULTS_FOLDER"
pushd "$GOPATH/src/github.com/cloudfoundry-incubator/cf-performance-tests" > /dev/null
  cat << EOF > ./config.yml
api: "api.$CF_DOMAIN"
skip_ssl_validation: true
cf_deployment_version: "$CF_DEPLOYMENT_VERSION"
capi_version: "$CAPI_VERSION"
users:
  admin:
    username: "admin"
    password: "$CF_ADMIN_PASSWORD"
ccdb_connection: "postgres://cloud_controller:$CCDB_PASSWORD@localhost:5524/cloud_controller?sslmode=disable"
uaadb_connection: "postgres://uaa:$UAADB_PASSWORD@localhost:5524/uaa?sslmode=disable"
results_folder: "$TEST_RESULTS"
EOF
  ginkgo ./...
popd > /dev/null

echo -e "\nPushing cf-performance test results..."
# must copy original git repository to the "repository" folder specified in the "put" resource
cp -r "perf-test-repo/." "performance-test-results/"
# now copy actual test result file to "put" resource
cp -r "$TEST_RESULTS" "performance-test-results/"

echo -e "\n Installing git lfs"
tmpdir="$(mktemp -d git_lfs_install.XXXXXX)"

cd "$tmpdir"
curl -Lo git.tar.gz https://github.com/github/git-lfs/releases/download/v1.1.0/git-lfs-linux-386-1.1.0.tar.gz
gunzip git.tar.gz
tar xf git.tar
mv git-lfs-1.1.0/git-lfs /usr/bin
cd ..
rm -rf "$tmpdir"
git lfs install

pushd "performance-test-results" > /dev/null
  status="$(git status --porcelain)"
  if [[ -n "$status" ]]; then
    git config user.name "${GIT_COMMIT_USERNAME}"
    git config user.email "${GIT_COMMIT_EMAIL}"
    git add --all .
    git commit -m "${GIT_COMMIT_MESSAGE}"
  fi
popd > /dev/null

echo "Killing background ssh tunnel..."
kill $SSH_PID

echo "Finished."
